%%% DATA INPUT

%% Controller values
Gs=1; % Sensor Gain
Ga=3; % Actuator
Gr=1; % Prefilter ( reference generator )
Gd=1; % Plant disturbance
Kd=2; % Proportion between input and output

%% Create signal input structs
% coefficient: signal input value
% maxError: max output error
% type: 0 for none, 1 for polynomial, 2 for sinusoidal
% frequency: only for sinusoidal signals in rad/sec. 0 for all others
% order: only for polynomial signals. -10 for all others
% tf: equal to input signal transfer function or gain block
% on: must always be initialized to 1

r.values=struct('coefficient', 1 ...
        , 'type', 1 ...
        , 'frequency', 0 ...
        , 'order', 0 ...% SHOULD BE 0
        , 'tf', Gr ...
        , 'on', 1 ...
        );
r.errors=struct('max', 1.5*10^(-1) ...
        , 'calculated', -1000 ...
        , 'simulated', -1000 ... 
    );
    
    
da.values=struct('coefficient', 8.5*10^(-3) ...
        , 'type', 1 ...
        , 'frequency', 0 ...
        , 'order', 0 ... % SHOULD BE 0
        , 'tf', 1 ...
        , 'on', 1 ...
        );
da.errors=struct('max', 25*10^(-3) ...
        , 'calculated', -1000 ...
        , 'simulated', -1000 ... 
    );


dp.values=struct('coefficient', 6*10^(-2) ...
        , 'type', 2 ...
        , 'frequency', 10 ...
        , 'order', -10 ...
        , 'tf', Gd ...
        , 'on', 1 ...
        );
dp.errors=struct('max',  6*10^(-4) ...
        , 'calculated', -1000 ...
        , 'simulated', -1000 ... 
    );

ds.values=struct('coefficient', 1*10^(-3) ...
        , 'type', 2 ...
        , 'frequency', 10000 ...
        , 'order', -10 ...
        , 'tf', 1 ...
        , 'on', 1 ...
        );
ds.errors=struct('max',  1*10^(-4) ...
        , 'calculated', -1000 ...
        , 'simulated', -1000 ... 
    );



        % simulink
busInfo = Simulink.Bus.createObject(r.values);
    
    
%% Time-Domain Performance Specifications

riseTime.on=1;
riseTime.maxValue=5e-3;

overshoot.on=1;
overshoot.maxValue=0.08;

settlingTime.on=0;
settlingTime.maxValue=12;
settlingTime.tolerance=0.05;

%% Plant Values

Gp.nCoefficients=2;
Gp.nOriginPoles=1;
Gp.inputString='(10e6*K)/((s^2 + P*s))'; % ORIG
% Gp.inputString='s^5*(10e6*coeff1)/((s + coeff2))'; % WRONG
Gp.coefficient(1)=struct('name','K'...
                ,'low', 0.8 ...
                ,'high', 1.2 );
Gp.coefficient(2)=struct('name','P'...
                ,'low', 420 ...
                ,'high', 580 );
            


